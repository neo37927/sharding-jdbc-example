<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.shardingjdbc.example.spring.boot.mybatis.repository.OrderItemRepository">
    <resultMap id="baseResultMap" type="io.shardingjdbc.example.spring.boot.mybatis.entity.OrderItem">
        <result column="order_item_id" property="orderItemId" jdbcType="INTEGER"/>
        <result column="order_id" property="orderId" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="status" property="status" jdbcType="VARCHAR"/>
    </resultMap>

    <update id="createIfNotExistsTable">
        CREATE TABLE IF NOT EXISTS T_ORDER_ITEM (order_item_id BIGINT AUTO_INCREMENT, order_id BIGINT, user_id INT NOT NULL, status VARCHAR(50), PRIMARY KEY (order_item_id));
    </update>

    <update id="truncateTable">
        TRUNCATE TABLE T_ORDER_ITEM;
    </update>
    
    <update id="dropTable">
        DROP TABLE IF EXISTS T_ORDER_ITEM;
    </update>
    
    <insert id="insert" useGeneratedKeys="true" keyProperty="orderItemId">
        INSERT INTO T_ORDER_ITEM (
          order_id, user_id, status
        )
        VALUES (
        #{orderId,jdbcType=INTEGER},
        #{userId,jdbcType=INTEGER},
        #{status,jdbcType=VARCHAR}
        )
    </insert>
    
    <delete id="delete">
        DELETE FROM T_ORDER_ITEM WHERE order_id = #{orderId,jdbcType=INTEGER}
    </delete>
    
    <select id="selectAll" resultMap="baseResultMap">
        SELECT
        i.*
        FROM
        T_ORDER o, T_ORDER_ITEM i
        WHERE
        o.order_id = i.order_id
    </select>
</mapper>
